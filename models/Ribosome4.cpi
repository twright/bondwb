-- Encoding of mRNA
-- Individual codon
species Codon(l, col, value, tail)
  = Codon1(l, col, value, tail);
species Codon1(l, col, value, tail)
  = col<value, tail>
  . Codon1(l, col, value, tail);
-- Example mRNA strand (could model transcription from DNA)
species mRNA(s5prime,l1,l2,l3,l4,s3prime,l)
  = --{l1-l@0,l2-l@0,l3-l@0,l4-l@0,s3prime-l@0,
    --l1-col1@1, l2-col2@1, l3-col3@1, l4-col4@1}
    s5prime<l1>.0
  | Codon(l1, col1, aag, l2)
  | Codon(l2, col2, ugg, l3)
  | Codon(l3, col3, uuc, l4)
  | Codon(l4, col4, uaa, s3prime)
  | l.0;


-- Ribosome Site A
-- Site A takes in the 5prime end of an mRNA strand
species A(co5prime, pass) = co5prime(l).Areading(l,pass);
-- Then successively reads and passes on the next location to Site P
species Areading(l,pass)
  = l(value, lnext)
  . pass<l>
  . Areading(lnext,pass);


-- Ribosome Site P
-- Site first receives a location from site A
species P(receive,pass,release,corelease)
  = receiveP(l) . Preading(l,pass,release,corelease);
-- Then goes on to read along to the next location
species Preading(l,pass,release,corelease)
  = l(value, lnext)
  -- Codon value gets matched with anticodon so we don't proceed until tRNA attached
  . value<release,corelease>
  . pass<l>
  . Preading(lnext, pass);
  --| stop(r, cor)
  --. {end-coend@0} release<end> 


-- Ribosome Site E
-- Site first receives a location from site E
species E(receive) = receive(l).Ereading(l);
-- Then moves along
species Ereading(l)
  = l(value, lnext)
  . Ereading(lnext);


-- Amino acid string (peptide)
species Amino(l, name, tail)
 = l<name,tail>.Amino(l, name, tail);


-- tRNA
-- tRNA waiting to bind to a codon
species tRNA(anticodon, aminoAcid, getLoc)
  = anticodon(release,corelease)
  . tRNABound(anticodon,aminoAcid,release,corelease,getLoc);
-- tRNA bound to a codon
species tRNABound(anticodon, aminoAcid, release, corelease, getLoc)
  = getLoc(lAmino).release<lAmino>.tRNAReleasable(lAmino,aminoAcid,corelease);
-- tRNA having caused another tRNA to release
species tRNAReleasable(lAmino, aminoAcid, corelease)
  = corelease(tail).Amino(lAmino, aminoAcid, tail);

-- The location server has a finite store of new names it can distribute
species LocationServer(sendLoc,a1,a2,a3,a4)
  = sendLoc<a1>.sendLoc<a2>.sendLoc<a3>.sendLoc<a4>.0;

-- Ribosome model
-- species Ribosome(co5prime)
--   = {passP-receiveP@1,passE-receiveE@1}
--     A(co5prime,passP) | P(receiveP,passE) | E(receiveE);

species testRNA(codon, release, corelease)
  = --{release-corelease@1}
    --testRNA2(codon, release, corelease);
--species testRNA2(codon, release, corelease)
    codon<release,corelease>.0
    | getLoc(lAmino).corelease<lAmino>.0;

process tRNAs
  =  [1.0] testRNA(uuu,release,corelease) || [1.0] tRNA(aaa,Phe,getLoc)
    || [1.0] LocationServer(sendLoc,a1,a2,a3,a4)
    --  || [5.0] tRNA(uag,Ile) || [5.0] tRNA(gga,Asn)
    : {uuu-aaa@1, auc-uag@1, aau-gga@1,
       Phe-coPhe@0, Ile-coIle@0, Asn-coAsn@0,
       release-corelease@1, getLoc-sendLoc@1000,
       a1-coa1@0, a2-coa2@0, a3-coa3@0, a3-coa4@0};

process Pi
  = [1.0] mRNA(s5prime,l1,l2,l3,l4,l,s3prime,l)
    || [1.0] tRNA()
    || [1.0] tRNA(aaa,Phe,getLoc)
    || [1.0] tRNA(uag,Ile,getLoc)
    || [1.0] tRNA(gga,Asn,getLoc)
    || [1.0] LocationServer(sendLoc,a1,a2,a3,a4)
    || [5.0] A(co5prime,passP) || [5.0] P(receiveP,passE) || [5.0] E(receiveE)
  : {s5prime-co5prime@1,passP-receiveP@1, passE-receiveE@1,
     l1-l@0,l2-l@0,l3-l@0,l4-l@0,s3prime-l@0,
     l1-col1@1, l2-col2@1, l3-col3@1, l4-col4@1,
     getLoc-sendLoc@1000,
     a1-coa1@0,a2-coa2@0,a3-coa3@0,a4-coa4@0,
     uuu-aaa@1, auc-uag@1, aau-gga@1,
     Phe-coPhe@0, Ile-coIle@0, Asn-coAsn@0
    };
