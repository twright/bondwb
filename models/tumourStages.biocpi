species Mortal(;l) = death@l -> 0
                   + birth@l(m) -> (Mortal(;l) | Mortal(;m))
                   + mutate@l(m) -> (Mortal(;l) | Immortal(;m));

species Immortal(;l) = birth@l(m) -> (Mortal(;l) | Mortal(;m))
                     + crisisDeath@l -> 0;

species Unsignalling(;l) = death@l -> 0
                         + birth@l(m) -> (Unsignalling(;l) | Unsignalling(;m))
                         + mutate@l(m) -> (Unsignalling(;l) | Signalling(;m));

species Signalling(;l) = death@l -> 0
                       + birth@l(m) -> (Signalling(;l) | Signalling(;m))
                       + growthFactor -> Signalling(;l);

-- species GFSource = growthFactor -> 0;

kinetic law Logistic (b, k; r) = b*r*(1 - r/k);

kinetic law LogisticGF (b, k, baseGrowth; r, w) = b*r*(w + baseGrowth)*(1 - r/k);

species Controlled(;l) = controlled@l(m) -> (Controlled(;l) | Controlled(;m))
                       + mutate@l(m) -> (Controlled(;l) | Uncontrolled(;m))
                       + death@l -> 0;

species Uncontrolled(;l) = uncontrolled@l(m) -> (Uncontrolled(;l)
                                               | Uncontrolled(;m));

species Limited5(;l) = allow@l(m) -> (Limited4(;l) | Limited4(;m))
                     + mutateUL@l(m) -> (Limited4(;l) | Unlimited(;m))
                     + death@l -> 0;

species Limited4(;l) = allow@l(m) -> (Limited3(;l) | Limited3(;m))
                     + mutateUL@l(m) -> (Limited3(;l) | Unlimited(;m))
                     + death@l -> 0;

species Limited3(;l) = allow@l(m) -> (Limited2(;l) | Limited2(;m))
                     + mutateUL@l(m) -> (Limited2(;l) | Unlimited(;m))
                     + death@l -> 0;

species Limited2(;l) = allow@l(m) -> (Limited1(;l) | Limited1(;m))
                     + mutateUL@l(m) -> (Limited1(;l) | Unlimited(;m))
                     + death@l -> 0;

species Limited1(;l) = allow@l(m) -> (Limited0(;l) | Limited0(;m))
                     + mutateUL@l(m) -> (Limited0(;l) | Unlimited(;m))
                     + death@l -> 0;

species Limited0(;l) = crisis@l -> 0;

species Unlimited(;l) = allow@l(m) -> (Unlimited(;l) | Unlimited(;m))
                      + death@l -> 0;

affinity network Aff1(rbirth,rmutate,rdeath) = {
  controlled + birth at rate Logistic(rbirth, 10);
  uncontrolled + birth at rate MA(rbirth);
  controlled + mutate at rate Logistic(rmutate, 10);
  uncontrolled + mutate at rate MA(rmutate);
  mutate + birth at rate Logistic(rmutate, 10);
  death + death at rate MA(rdeath);
}

affinity network Aff3(rbirth,rmutate,rdeath,kcontrolled,kuncontrolled) = {
  controlled + birth, growthFactor at rate LogisticGF(rbirth, kcontrolled, 1);
  uncontrolled + birth, growthFactor at rate LogisticGF(rbirth, kuncontrolled, 1);
  controlled + mutate, growthFactor at rate LogisticGF(rmutate, kcontrolled, 1);
  uncontrolled + mutate, growthFactor at rate LogisticGF(rmutate, kuncontrolled, 1);
  mutate + birth, growthFactor at rate LogisticGF(rmutate, kcontrolled, 1);
  death + death + death at rate MA(rdeath);
}

affinity network Aff2(rbirth,rmutate,rdeath,rcrisis) = {
  controlled + birth + allow at rate Logistic(rbirth, 10);
  uncontrolled + birth + allow at rate MA(rbirth);
  controlled + mutate + allow at rate MA(rmutate);
  mutate + birth + allow at rate MA(rmutate);
  uncontrolled + mutate + allow at rate MA(rmutate);
  controlled + mutate + allow at rate Logistic(rmutate, 10);
  death + death + death at rate MA(rdeath);
  crisis + death + death at rate MA(rcrisis);
  crisis + crisisDeath + death at rate MA(rcrisis);
  uncontrolled + birth + mutateUL at rate Logistic(rmutate, 10);
  controlled + birth + mutateUL at rate MA(rmutate);
}

-- species GrowthSource = growthFactor -> GrowthSource;

process P1 = [10.0] new l in Mortal(;l) | Controlled(;l)
             with network Aff1(1.0,0.1,0.1);
process P2 = [10.0] new l in Mortal(;l) | Controlled(;l) | Limited5(;l)
             with network Aff2(1.0,0.1,0.1,10.0);
process P3 = [10.0] (new l in Mortal(;l) | Controlled(;l) | Unsignalling(;l))
          -- || [1.00] GrowthSource
             with network Aff3(30.0,0.1,0.1, 10, 20);
